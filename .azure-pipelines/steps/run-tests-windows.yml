parameters:
- name: testGroup
  type: string
  values:
  - unit
  - one
  - two

steps:
# - task: UsePythonVersion@0
#   displayName: Use Python $(python.version)
#   inputs:
#     versionSpec: '$(python.version)'
#     architecture: '$(python.architecture)'

# - task: PowerShell@2
#   inputs:
#     filePath: .azure-pipelines/scripts/New-RAMDisk.ps1
#     arguments: "-Drive R -Size 1GB"
#   displayName: Setup RAMDisk

# - powershell: |
#     mkdir R:\Temp
#     $acl = Get-Acl "R:\Temp"
#     $rule = New-Object System.Security.AccessControl.FileSystemAccessRule(
#         "Everyone", "FullControl", "ContainerInherit,ObjectInherit", "None", "Allow"
#     )
#     $acl.AddAccessRule($rule)
#     Set-Acl "R:\Temp" $acl
#   displayName: Set RAMDisk Permissions

# - bash: pip install --upgrade 'virtualenv<20' setuptools tox
#   displayName: Install Tox

# Lots of fun logic, for... running the correct tests.
- ${{ if in(parameters.testGroup, 'unit', 'one') }}:
  - script: echo "unit tests?"
    env:
      TEMP: "R:\\Temp"
    displayName: Run unit tests

- ${{ if in(parameters.testGroup, 'one', 'two') }}:
  - powershell: |
      python -m "import sys; print(sys.argv)" $env:SELECTOR
    env:
      ${{ if eq(parameters.testGroup, 'one') }}:
        SELECTOR: "not test_install"
      ${{ if eq(parameters.testGroup, 'two') }}:
        SELECTOR: "test_install"
    displayName: Run integration tests

# - task: PublishTestResults@2
#   displayName: Publish Test Results
#   inputs:
#     testResultsFiles: junit/*.xml
#     testRunTitle: 'Python $(python.version)'
#   condition: succeededOrFailed()
