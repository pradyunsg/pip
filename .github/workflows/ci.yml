name: CI

on:
  push:
    branches:
    - master
  pull_request:
  schedule:
  # Run every Friday at 18:02 UTC
  - cron: 2 18 * * 5

jobs:
  dev-tools:
    name: ${{ matrix.os }} / Quality Check
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os: [Ubuntu, Windows, MacOS]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    # Setup Caching
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/requirements/tests.txt') }}-${{ hashFiles('tools/requirements/docs.txt') }}-${{ hashFiles('tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Set PY (for pre-commit cache)
      run: echo "::set-env name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
    - name: pre-commit cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|2020-02-14|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}

    # Get the latest tox
    - name: Install tox
      run: python -m pip install tox

    # Main check
    - run: python -m tox -e "lint,docs"

  vendoring:
    name: ${{ matrix.os }} / Vendoring
    runs-on: ${{ matrix.os }}-latest

    needs: dev-tools

    strategy:
      matrix:
        os: [Ubuntu, Windows, MacOS]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    # Setup Caching
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/requirements/tests.txt') }}-${{ hashFiles('tools/requirements/docs.txt') }}-${{ hashFiles('tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    # Get the latest tox
    - name: Install tox
      run: python -m pip install tox

    # Main check
    - run: python -m tox -e "vendoring"

  tests:
    name: ${{ matrix.os }} / Tests / ${{ matrix.python }}
    runs-on: ${{ matrix.os }}-latest

    needs: dev-tools

    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu, MacOS]
        python: [2.7, 3.5, 3.6, 3.7, 3.8, pypy2, pypy3]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}

    # Setup Caching
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/requirements/tests.txt') }}-${{ hashFiles('tools/requirements/docs.txt') }}-${{ hashFiles('tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    # Get the latest tox
    - name: Install tox
      run: python -m pip install tox

    # Main check
    - name: Run unit tests
      run: python -m tox -e py -- -n auto -m unit
    - name: Run integration tests
      run: python -m tox -e py -- -n auto -m integration --duration=5
